.build: &build
  stage: build
  script:
    - yarn install --pure-lockfile --cache-folder .yarn --prefer-offline
    - yarn workspace @trezor/suite-data copy-static-files
    - yarn workspace @trezor/suite-desktop build:${platform}
    - ls -la packages/suite-desktop/build-electron
    - mv packages/suite-desktop/build-electron/* .
    - more latest*.yml | cat
  artifacts:
    paths:
      - ${artifact}
      - latest*.yml
    expire_in: 1 days

.build_nix: &build_nix
  script: # override build script to use nix-shell instead
    - nix-shell --run "yarn install --pure-lockfile --cache-folder .yarn --prefer-offline"
    - nix-shell --run "yarn workspace @trezor/suite-data copy-static-files"
    - nix-shell --run "yarn workspace @trezor/suite-desktop build:${platform}"
    - ls -la packages/suite-desktop/build-electron
    - mv packages/suite-desktop/build-electron/* .
    - more latest*.yml | cat

.run_everything_rules: &run_everything_rules
  refs:
    - develop
    - releases
    - schedules
    - /^release\//
    - /^run\//

suite-desktop build mac:
  only:
    <<: *run_everything_rules
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix

suite-desktop build mac codesign:
  only:
    refs:
      - codesign
  when: manual
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: mac
  <<: *build
  <<: *build_nix

suite-desktop build linux:
  # only:
  #   <<: *run_everything_rules
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build

suite-desktop build linux codesign:
  only:
    refs:
      - codesign
  when: manual
  tags:
    - darwin
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: linux
  <<: *build
  <<: *build_nix

suite-desktop build windows:
  only:
    <<: *run_everything_rules
  image: electronuserland/builder:wine
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build

suite-desktop build windows codesign:
  only:
    refs:
      - codesign
  when: manual
  tags:
    - darwin
  image: electronuserland/builder:wine
  variables:
    artifact: ${DESKTOP_APP_NAME}*
    platform: win
  <<: *build
  <<: *build_nix

suite-desktop e2e linux:
    image: circleci/node:11-browsers
    stage: integration testing
    script:
        - export DISPLAY=':99.0'
        - "sh -e /etc/init.d/xvfb start"
        - sleep 3
        - export ELECTRON_DISABLE_SANDBOX=1 
        - which google-chrome
        - google-chrome --version
        # - Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        # - xvfb :99 -ac &
        - ls -la
        - node ./packages/suite-desktop/test/index.js
    dependencies:
        - suite-desktop build linux

suite-desktop deploy dev:
  stage: deploy to dev
  only:
    <<: *run_everything_rules
  variables:
    DEPLOY_DIRECTORY: ${DEPLOY_BASE_DIR}/suite-desktop/${CI_BUILD_REF_NAME}
  script:
    - mkdir -p ${DEPLOY_DIRECTORY}
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.AppImage "${DEPLOY_DIRECTORY}/" || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.dmg "${DEPLOY_DIRECTORY}/" || :'
    - 'rsync --delete -va "${DESKTOP_APP_NAME}"-*.exe "${DEPLOY_DIRECTORY}/" || :'
  tags:
    - deploy

suite-desktop publish prod:
  stage: deploy to production
  only:
    refs:
      - releases
  script:
    - cd packages/suite-desktop
    - yarn publish
