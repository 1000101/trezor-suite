cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .npm
    - cache/Cypress
    - node_modules

stages:
  - build
  - test
  - afterTest

variables:
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"
  CONTAINER_NAME: "$CI_REGISTRY/trezor/trezor-ui-components"

# testing stage

build image:
  image: docker:latest
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  services:
    - docker:dind
  stage: build
  when: always
  script:
    - docker pull $CONTAINER_NAME:latest || true
    - docker build --cache-from $CONTAINER_NAME:latest --tag $CONTAINER_NAME:$CI_COMMIT_SHA --tag $CONTAINER_NAME:latest .
    - docker push $CONTAINER_NAME:$CI_COMMIT_SHA
    - docker push $CONTAINER_NAME:latest

test snapshots:
  image: $CI_REGISTRY/$CONTAINER_NAME:$CI_COMMIT_SHA
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  stage: test
  script:
    - yarn storybook
    - yarn ci:test:snapshots -c baseUrl=https://trezor.github.io/trezor-ui-components
  artifacts:
    expire_in: 1 day
    when: always
    paths:
      - cypress/screenshots
      - cypress/videos

delete image:
  image: docker:latest
  stage: afterTest
  services:
    - docker:dind
  before_script:
    - docker login $CI_REGISTRY -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD
  when: always
  script:
    - docker rmi $CONTAINER_NAME:$CI_COMMIT_SHA